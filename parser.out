Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> ss
Rule 1     ss -> director
Rule 2     ss -> writer
Rule 3     ss -> producer
Rule 4     ss -> language
Rule 5     ss -> cast
Rule 6     ss -> story
Rule 7     ss -> boxoffice
Rule 8     ss -> runtime
Rule 9     ss -> movietitle
Rule 10    ss -> empty
Rule 11    movietitle -> MOVIETITLE CONTENT
Rule 12    director -> DIRECTORS CONTENT
Rule 13    writer -> WRITERS f DIVEND
Rule 14    f -> f COMMA ANCHORSTART CONTENT ANCHOREND
Rule 15    f -> ANCHORSTART CONTENT ANCHOREND
Rule 16    producer -> PRODUCERS g DIVEND
Rule 17    g -> g COMMA ANCHORSTART CONTENT ANCHOREND
Rule 18    g -> ANCHORSTART CONTENT ANCHOREND
Rule 19    language -> LANGUAGE CONTENT
Rule 20    cast -> CAST CONTENT ROLE CONTENT CASTEND
Rule 21    story -> STORY CONTENT
Rule 22    boxoffice -> BOXOFFICE CONTENT
Rule 23    runtime -> RUNTIME CONTENT
Rule 24    empty -> <empty>

Terminals, with rules where they appear

ANCHOREND            : 14 15 17 18
ANCHORSTART          : 14 15 17 18
BOXOFFICE            : 22
CAST                 : 20
CASTEND              : 20
COMMA                : 14 17
CONTENT              : 11 12 14 15 17 18 19 20 20 21 22 23
DIRECTORS            : 12
DIVEND               : 13 16
LANGUAGE             : 19
MOVIETITLE           : 11
PRODUCERS            : 16
ROLE                 : 20
RUNTIME              : 23
STORY                : 21
WRITERS              : 13
error                : 

Nonterminals, with rules where they appear

boxoffice            : 7
cast                 : 5
director             : 1
empty                : 10
f                    : 13 14
g                    : 16 17
language             : 4
movietitle           : 9
producer             : 3
runtime              : 8
ss                   : 0
story                : 6
writer               : 2

Parsing method: LALR

state 0

    (0) S' -> . ss
    (1) ss -> . director
    (2) ss -> . writer
    (3) ss -> . producer
    (4) ss -> . language
    (5) ss -> . cast
    (6) ss -> . story
    (7) ss -> . boxoffice
    (8) ss -> . runtime
    (9) ss -> . movietitle
    (10) ss -> . empty
    (12) director -> . DIRECTORS CONTENT
    (13) writer -> . WRITERS f DIVEND
    (16) producer -> . PRODUCERS g DIVEND
    (19) language -> . LANGUAGE CONTENT
    (20) cast -> . CAST CONTENT ROLE CONTENT CASTEND
    (21) story -> . STORY CONTENT
    (22) boxoffice -> . BOXOFFICE CONTENT
    (23) runtime -> . RUNTIME CONTENT
    (11) movietitle -> . MOVIETITLE CONTENT
    (24) empty -> .

    DIRECTORS       shift and go to state 12
    WRITERS         shift and go to state 13
    PRODUCERS       shift and go to state 14
    LANGUAGE        shift and go to state 15
    CAST            shift and go to state 16
    STORY           shift and go to state 17
    BOXOFFICE       shift and go to state 18
    RUNTIME         shift and go to state 19
    MOVIETITLE      shift and go to state 20
    $end            reduce using rule 24 (empty -> .)

    ss                             shift and go to state 1
    director                       shift and go to state 2
    writer                         shift and go to state 3
    producer                       shift and go to state 4
    language                       shift and go to state 5
    cast                           shift and go to state 6
    story                          shift and go to state 7
    boxoffice                      shift and go to state 8
    runtime                        shift and go to state 9
    movietitle                     shift and go to state 10
    empty                          shift and go to state 11

state 1

    (0) S' -> ss .



state 2

    (1) ss -> director .

    $end            reduce using rule 1 (ss -> director .)


state 3

    (2) ss -> writer .

    $end            reduce using rule 2 (ss -> writer .)


state 4

    (3) ss -> producer .

    $end            reduce using rule 3 (ss -> producer .)


state 5

    (4) ss -> language .

    $end            reduce using rule 4 (ss -> language .)


state 6

    (5) ss -> cast .

    $end            reduce using rule 5 (ss -> cast .)


state 7

    (6) ss -> story .

    $end            reduce using rule 6 (ss -> story .)


state 8

    (7) ss -> boxoffice .

    $end            reduce using rule 7 (ss -> boxoffice .)


state 9

    (8) ss -> runtime .

    $end            reduce using rule 8 (ss -> runtime .)


state 10

    (9) ss -> movietitle .

    $end            reduce using rule 9 (ss -> movietitle .)


state 11

    (10) ss -> empty .

    $end            reduce using rule 10 (ss -> empty .)


state 12

    (12) director -> DIRECTORS . CONTENT

    CONTENT         shift and go to state 21


state 13

    (13) writer -> WRITERS . f DIVEND
    (14) f -> . f COMMA ANCHORSTART CONTENT ANCHOREND
    (15) f -> . ANCHORSTART CONTENT ANCHOREND

    ANCHORSTART     shift and go to state 23

    f                              shift and go to state 22

state 14

    (16) producer -> PRODUCERS . g DIVEND
    (17) g -> . g COMMA ANCHORSTART CONTENT ANCHOREND
    (18) g -> . ANCHORSTART CONTENT ANCHOREND

    ANCHORSTART     shift and go to state 25

    g                              shift and go to state 24

state 15

    (19) language -> LANGUAGE . CONTENT

    CONTENT         shift and go to state 26


state 16

    (20) cast -> CAST . CONTENT ROLE CONTENT CASTEND

    CONTENT         shift and go to state 27


state 17

    (21) story -> STORY . CONTENT

    CONTENT         shift and go to state 28


state 18

    (22) boxoffice -> BOXOFFICE . CONTENT

    CONTENT         shift and go to state 29


state 19

    (23) runtime -> RUNTIME . CONTENT

    CONTENT         shift and go to state 30


state 20

    (11) movietitle -> MOVIETITLE . CONTENT

    CONTENT         shift and go to state 31


state 21

    (12) director -> DIRECTORS CONTENT .

    $end            reduce using rule 12 (director -> DIRECTORS CONTENT .)


state 22

    (13) writer -> WRITERS f . DIVEND
    (14) f -> f . COMMA ANCHORSTART CONTENT ANCHOREND

    DIVEND          shift and go to state 32
    COMMA           shift and go to state 33


state 23

    (15) f -> ANCHORSTART . CONTENT ANCHOREND

    CONTENT         shift and go to state 34


state 24

    (16) producer -> PRODUCERS g . DIVEND
    (17) g -> g . COMMA ANCHORSTART CONTENT ANCHOREND

    DIVEND          shift and go to state 35
    COMMA           shift and go to state 36


state 25

    (18) g -> ANCHORSTART . CONTENT ANCHOREND

    CONTENT         shift and go to state 37


state 26

    (19) language -> LANGUAGE CONTENT .

    $end            reduce using rule 19 (language -> LANGUAGE CONTENT .)


state 27

    (20) cast -> CAST CONTENT . ROLE CONTENT CASTEND

    ROLE            shift and go to state 38


state 28

    (21) story -> STORY CONTENT .

    $end            reduce using rule 21 (story -> STORY CONTENT .)


state 29

    (22) boxoffice -> BOXOFFICE CONTENT .

    $end            reduce using rule 22 (boxoffice -> BOXOFFICE CONTENT .)


state 30

    (23) runtime -> RUNTIME CONTENT .

    $end            reduce using rule 23 (runtime -> RUNTIME CONTENT .)


state 31

    (11) movietitle -> MOVIETITLE CONTENT .

    $end            reduce using rule 11 (movietitle -> MOVIETITLE CONTENT .)


state 32

    (13) writer -> WRITERS f DIVEND .

    $end            reduce using rule 13 (writer -> WRITERS f DIVEND .)


state 33

    (14) f -> f COMMA . ANCHORSTART CONTENT ANCHOREND

    ANCHORSTART     shift and go to state 39


state 34

    (15) f -> ANCHORSTART CONTENT . ANCHOREND

    ANCHOREND       shift and go to state 40


state 35

    (16) producer -> PRODUCERS g DIVEND .

    $end            reduce using rule 16 (producer -> PRODUCERS g DIVEND .)


state 36

    (17) g -> g COMMA . ANCHORSTART CONTENT ANCHOREND

    ANCHORSTART     shift and go to state 41


state 37

    (18) g -> ANCHORSTART CONTENT . ANCHOREND

    ANCHOREND       shift and go to state 42


state 38

    (20) cast -> CAST CONTENT ROLE . CONTENT CASTEND

    CONTENT         shift and go to state 43


state 39

    (14) f -> f COMMA ANCHORSTART . CONTENT ANCHOREND

    CONTENT         shift and go to state 44


state 40

    (15) f -> ANCHORSTART CONTENT ANCHOREND .

    DIVEND          reduce using rule 15 (f -> ANCHORSTART CONTENT ANCHOREND .)
    COMMA           reduce using rule 15 (f -> ANCHORSTART CONTENT ANCHOREND .)


state 41

    (17) g -> g COMMA ANCHORSTART . CONTENT ANCHOREND

    CONTENT         shift and go to state 45


state 42

    (18) g -> ANCHORSTART CONTENT ANCHOREND .

    DIVEND          reduce using rule 18 (g -> ANCHORSTART CONTENT ANCHOREND .)
    COMMA           reduce using rule 18 (g -> ANCHORSTART CONTENT ANCHOREND .)


state 43

    (20) cast -> CAST CONTENT ROLE CONTENT . CASTEND

    CASTEND         shift and go to state 46


state 44

    (14) f -> f COMMA ANCHORSTART CONTENT . ANCHOREND

    ANCHOREND       shift and go to state 47


state 45

    (17) g -> g COMMA ANCHORSTART CONTENT . ANCHOREND

    ANCHOREND       shift and go to state 48


state 46

    (20) cast -> CAST CONTENT ROLE CONTENT CASTEND .

    $end            reduce using rule 20 (cast -> CAST CONTENT ROLE CONTENT CASTEND .)


state 47

    (14) f -> f COMMA ANCHORSTART CONTENT ANCHOREND .

    DIVEND          reduce using rule 14 (f -> f COMMA ANCHORSTART CONTENT ANCHOREND .)
    COMMA           reduce using rule 14 (f -> f COMMA ANCHORSTART CONTENT ANCHOREND .)


state 48

    (17) g -> g COMMA ANCHORSTART CONTENT ANCHOREND .

    DIVEND          reduce using rule 17 (g -> g COMMA ANCHORSTART CONTENT ANCHOREND .)
    COMMA           reduce using rule 17 (g -> g COMMA ANCHORSTART CONTENT ANCHOREND .)

